function [ ] = pso( omg, phii, phik, numPart,it )
% preallocate for efficiency
best_position = [ 100, 100, 500];
p_posVel = zeros(numPart,5);
locations = calculateGrid();

% Initial positions for the particles and the global best position
for k=1:numPart
    i = randi(10);
    j = randi(5);
    v_i = randi([-10 10]);
    v_j = randi([-5 5]);
    co = cost([i j], locations);
    
    if co < best_position(3);
        best_position = [i j co];
    end
    p_posVel(k,:) = [i j v_i v_j co];
end

% start the iteration
for k=1:it
    fprintf('========================================== Iteration %d ========================================== \n', i);
    disp('best position for this generation:');
    disp(best_position);
    for l=1:numPart
        R1 = rand();
        R2 = rand();
        
        i = p_posVel(l,1);
        j = p_posVel(l,2);
        v_i = p_posVel(l,3);
        v_j = p_posVel(l,4);
        
        v_i = omg * v_i + phii * R1 ()
    end
end

